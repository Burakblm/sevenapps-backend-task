version: '3.8'

services:
  chat-service:
    image: burakblm/chat-service:latest
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - BUCKET_NAME=${BUCKET_NAME}
      - GOOGLE_GENERATIVE_AI_API=${GOOGLE_GENERATIVE_AI_API}

    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat-service.rule=Host(`34.170.157.210`) && PathPrefix(`/v1/chat`)"
      - "traefik.http.services.chat-service.loadbalancer.server.port=8001"

  upload-service:
    image: burakblm/upload-service:latest
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - BUCKET_NAME=${BUCKET_NAME}

    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.upload-service.rule=Host(`34.170.157.210`) && PathPrefix(`/v1/pdf`)"
      - "traefik.http.services.upload-service.loadbalancer.server.port=8000"

  metadata-extraction-service:
    image: burakblm/metadata-extraction-service:latest
    environment:
      - KAFKA_SERVER=${KAFKA_SERVER}
      - KAFKA_PORT=${KAFKA_PORT}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - BUCKET_NAME=${BUCKET_NAME}

    networks:
      - app-network


  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
